import os
from azure.identity import DefaultAzureCredential
from azure.storage.filedatalake import DataLakeServiceClient

# Set the Azure credentials
credential = DefaultAzureCredential()

# Set the Azure Data Lake Storage account name and file system name
storage_account_name = "your_storage_account_name"
file_system_name = "your_file_system_name"

# Create the Data Lake Service Client
service_client = DataLakeServiceClient(account_url=f"https://{storage_account_name}.dfs.core.windows.net", credential=credential)

# Function to create a new directory in Azure Data Lake Storage
def create_directory(directory_path):
    file_system_client = service_client.get_file_system_client(file_system=file_system_name)
    file_system_client.create_directory(directory_path)

# Function to upload a file to Azure Data Lake Storage
def upload_file(local_file_path, remote_file_path):
    file_system_client = service_client.get_file_system_client(file_system=file_system_name)
    file_client = file_system_client.get_file_client(remote_file_path)
    with open(local_file_path, "rb") as local_file:
        file_client.upload_data(local_file.read(), overwrite=True)

# Function to download a file from Azure Data Lake Storage
def download_file(remote_file_path, local_file_path):
    file_system_client = service_client.get_file_system_client(file_system=file_system_name)
    file_client = file_system_client.get_file_client(remote_file_path)
    with open(local_file_path, "wb") as local_file:
        local_file.write(file_client.download_data().readall())

# Function to list all files and directories in Azure Data Lake Storage
def list_files_and_directories(directory_path):
    file_system_client = service_client.get_file_system_client(file_system=file_system_name)
    directory_client = file_system_client.get_directory_client(directory_path)
    paths = directory_client.get_paths()
    for path in paths:
        if path.is_directory:
            print("Directory:", path.name)
        else:
            print("File:", path.name)

# Example usage of the functions
directory_path = "your_directory_path"
local_file_path = "path_to_local_file.txt"
remote_file_path = "path_to_remote_file.txt"

create_directory(directory_path)
upload_file(local_file_path, remote_file_path)
download_file(remote_file_path, local_file_path)
list_files_and_directories(directory_path)

Let's go through the script step by step to understand its functionality:

Importing necessary modules:

os: This module provides a way to use operating system dependent functionality.
DefaultAzureCredential from azure.identity: This module provides a default credential for authenticating with Azure services.
DataLakeServiceClient from azure.storage.filedatalake: This module provides the client object to interact with Azure Data Lake Storage.
Set the Azure credentials:

credential = DefaultAzureCredential(): This line initializes the Azure credential using the default credentials, which can be obtained from environment variables, managed identity, or Azure CLI.
Set the Azure Data Lake Storage account and file system names:

storage_account_name = "your_storage_account_name"
file_system_name = "your_file_system_name"
Create the Data Lake Service Client:

service_client = DataLakeServiceClient(account_url=f"https://{storage_account_name}.dfs.core.windows.net", credential=credential): This line creates a client object to interact with Azure Data Lake Storage using the provided account URL and credential.
Define functions for various operations:

create_directory(directory_path): This function creates a new directory in Azure Data Lake Storage.
upload_file(local_file_path, remote_file_path): This function uploads a file from the local file system to Azure Data Lake Storage.
download_file(remote_file_path, local_file_path): This function downloads a file from Azure Data Lake Storage to the local file system.
list_files_and_directories(directory_path): This function lists all files and directories in a specified directory in Azure Data Lake Storage.
Example usage of the functions:

directory_path = "your_directory_path": Specify the path for the directory you want to create.
local_file_path = "path_to_local_file.txt": Specify the local file path for uploading or downloading.
remote_file_path = "path_to_remote_file.txt": Specify the remote file path in Azure Data Lake Storage.
create_directory(directory_path): This line calls the create_directory function to create a new directory in Azure Data Lake Storage.
`upload_file(local_file_path, remote_file_path
